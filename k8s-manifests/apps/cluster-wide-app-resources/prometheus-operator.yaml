apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-crd
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    repoURL: https://github.com/prometheus-community/helm-charts
    path: charts/kube-prometheus-stack/crds/
    targetRevision: kube-prometheus-stack-45.3.0
    directory:
      recurse: true
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
    syncOptions:
    - CreateNamespace=true
    - Replace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io # cascade deletion on this App deletion
spec:
  project: cluster-wide-apps
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 45.3.0
    helm:
      releaseName: prometheus
      skipCrds: true
      values: |
        defaultRules:
          create: true
          rules:
            kubeProxy: false
        service:
          portName: http-web
        serviceMonitor:
          path: "/metrics"
        grafana:
          enabled: false
        prometheus:
          prometheusSpec:
            additionalScrapeConfigs:
              - job_name: 'prometheus'
                static_configs:
                  - targets: ['192.168.11.32:9100']
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: nfs-share
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 20Gi
            resources:
              requests:
                memory: 1Gi
            securityContext:
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0
              fsGroup: 2000
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: nfs-share
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
            securityContext:
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0
              fsGroup: 2000
        kubeProxy:
          enabled: false
        kubeEtcd:
          endpoints:
            - 192.168.11.111
            - 192.168.11.112
            - 192.168.11.113
          service:
            enabled: true
            port: 2381
            targetPort: 2381
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true